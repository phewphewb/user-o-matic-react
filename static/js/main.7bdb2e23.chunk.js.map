{"version":3,"sources":["components/NotAvailable/NotAvailable.js","core/users/actions.js","core/users/reducer.js","core/constants.js","core/api/parsers.js","core/api/api.js","core/api/sagas.js","core/users/sagas.js","core/rootReducer.js","core/rootSagas.js","core/store.js","hooks/useClock.js","components/UI/avatar/Avatar.js","components/User/UserDetails.js","components/UI/backdrop/Backdrop.js","components/UI/portal/Portal.js","components/UI/modal/Modal.js","components/ClockTime/ClockTime.js","components/UI/button/Button.js","components/User/UsersInfo.js","components/Header/Header.js","components/Footer/Footer.js","components/UI/layouts/Layout.js","components/UI/input/Input.js","components/UI/tab/Tab.js","components/User/UserListItem.js","components/UI/modal/withModalPromisify.js","components/ConfirmationPopup/ConfirmationPopup.js","components/User/UserList.js","components/User/UserTable.js","hooks/useSearch.js","pages/Users.js","App.js","hooks/useMediaQuery.js","serviceWorker.js","index.js"],"names":["NotAvailable","className","usersActions","FETCH_USERS_PENDING","FETCH_USERS_FULFILLED","FETCH_USERS_FAILED","LOAD_USERS","LOAD_NEXT_PAGE","TOGGLE_SELECT_USER","fetchUsersPending","type","fetchUsersFulfilled","_","users","payload","fetchUsersFailed","message","loadUsers","page","loadNextPage","toggleSelectUser","id","time","usersRequestActions","fulfilled","pending","failed","initialState","error","userIds","selectedTimes","selectedIds","toggleUserSelection","state","toggleId","updatedSelectedTimes","updatedSelectedIds","find","filter","unshift","PAGINATION_PARAMS","defaultParser","response","data","api","dispatch","url","paginate","parseResponse","results","options","a","method","urlConfig","requestUrl","reqConfig","headers","Accept","axios","parsedResponse","query","params","push","length","join","fetchEntities","apiFunction","actions","param","put","call","fetchUsers","bind","watchLoadUsers","watchLoadNextPage","select","takeLeading","takeLatest","userSagas","fork","rootReducer","combineReducers","action","updatedUsers","updatedUserIds","forEach","user","login","uuid","sagas","all","saga","createSagaMiddlware","store","createStore","composeWithDevTools","applyMiddleware","run","getClockTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","clockTime","Avatar","imageUrl","alt","src","Row","title","value","children","UserDetails","useParams","useSelector","picture","name","email","cell","location","dob","gender","thumbnail","first","last","age","street","number","city","country","postcode","backdrop","onClick","modal","document","getElementById","div","createElement","Portal","useEffect","appendChild","removeChild","createPortal","Modal","onClickAway","ClockTime","useState","setTime","clockInterval","setInterval","Date","clearInterval","useClock","Button","forwardRef","ref","disabled","active","classNames","UsersInfo","Header","history","useHistory","ltlink","dtlink","changeTheme","localStorage","getItem","setItem","pathname","goBack","footer","to","Layout","Input","props","Tab","loading","onLoadMore","UserListItem","React","memo","linkToModal","linkToDetails","isSelected","clickSelect","prevProps","nextProps","notSelected","notToggled","withModalPromisify","Component","isOpen","setIsOpen","resolveRef","useRef","rejectRef","open","Promise","ok","fail","current","close","useImperativeHandle","reject","resolve","ConfirmationPopup","UserList","filteredIds","useLocation","useDispatch","modalRef","useCallback","e","getTime","target","console","warn","map","userId","selectedTime","background","key","filterWithSearch","ids","search","searchString","trim","toLowerCase","indexOf","UserTable","setSearch","searchTimeOutRef","handleSearchChange","clearTimeout","timer","setTimeout","useSearch","filteredUsers","useMemo","filteredSelectedUsers","placeholder","onChange","UsersPage","useRouteMatch","exact","path","component","stopPropagation","NotFound","lazy","DesktopRouter","Users","App","isMobile","setIsMobile","handleResize","width","window","innerWidth","addEventListener","removeEventListener","useMediaQuery","basename","fallback","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7bdb2e23.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotAvailable.scss\";\n\nconst NotAvailable = () => {\n  return (\n    <div className=\"not-available__container\">\n      <h1 className=\"not-available__title\">Mobile version is in development.</h1>\n    </div>\n  );\n};\n\nexport default NotAvailable;\n","export const usersActions = {\n  FETCH_USERS_PENDING: \"FETCH_USERS_PENDING\",\n  FETCH_USERS_FULFILLED: \"FETCH_USERS_FULFILLED\",\n  FETCH_USERS_FAILED: \"FETCH_USERS_FAILED\",\n\n  LOAD_USERS: \"LOAD_USERS\",\n  LOAD_NEXT_PAGE: \"LOAD_NEXT_PAGE\",\n\n  TOGGLE_SELECT_USER: \"TOGGLE_SELECT_USER\",\n\n  fetchUsersPending: () => ({\n    type: usersActions.FETCH_USERS_PENDING\n  }),\n  fetchUsersFulfilled: (_, users) => ({\n    type: usersActions.FETCH_USERS_FULFILLED,\n    payload: { users }\n  }),\n  fetchUsersFailed: (message) => ({\n    type: usersActions.FETCH_USERS_FAILED,\n    payload: {\n      message\n    }\n  }),\n\n  loadUsers: (page) => ({\n    type: usersActions.LOAD_USERS,\n    payload: { page }\n  }),\n  loadNextPage: () => ({\n    type: usersActions.LOAD_NEXT_PAGE\n  }),\n\n  toggleSelectUser: (id, time) => ({\n    type: usersActions.TOGGLE_SELECT_USER,\n    payload: {\n      id,\n      time\n    }\n  })\n};\n\nexport const usersRequestActions = {\n  fulfilled: usersActions.fetchUsersFulfilled,\n  pending: usersActions.fetchUsersPending,\n  failed: usersActions.fetchUsersFailed\n};\n","import { usersActions } from \"./actions\";\n\nconst initialState = {\n  error: null,\n  page: 0,\n  users: {},\n  userIds: [],\n  selectedTimes: {},\n  selectedIds: []\n};\n\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case usersActions.FETCH_USERS_FULFILLED: {\n      const updatedUsers = { ...state.users };\n      const updatedUserIds = [...state.userIds];\n      action.payload.users.forEach((user) => {\n        updatedUsers[user.login.uuid] = user;\n        updatedUserIds.push(user.login.uuid);\n      });\n      return {\n        ...state,\n        users: updatedUsers,\n        userIds: updatedUserIds,\n        error: null,\n        page: state.page + 1\n      };\n    }\n    case usersActions.FETCH_USERS_FAILED:\n      return { ...state, error: action.payload.error };\n    case usersActions.TOGGLE_SELECT_USER:\n      return toggleUserSelection(state, action.payload.id, action.payload.time);\n    default:\n      return state;\n  }\n};\n\nfunction toggleUserSelection(state, toggleId, time) {\n  const updatedSelectedTimes = { ...state.selectedTimes };\n  let updatedSelectedIds = [...state.selectedIds];\n  const found = state.selectedIds.find((id) => id === toggleId);\n  if (found) {\n    updatedSelectedIds = state.selectedIds.filter((id) => id !== toggleId);\n    delete updatedSelectedTimes[toggleId];\n  } else {\n    updatedSelectedIds.unshift(toggleId);\n    updatedSelectedTimes[toggleId] = time;\n  }\n  return { ...state, selectedIds: updatedSelectedIds, selectedTimes: updatedSelectedTimes };\n}\n","export const USERS_URL = \"https://randomuser.me/api/\";\nexport const PAGINATION_LIMIT = 30;\nexport const PAGINATION_PARAMS = `?results=${PAGINATION_LIMIT}&page=`;\n","export const defaultParser = (response) => response.data;\n","import axios from \"axios\";\nimport { PAGINATION_PARAMS, USERS_URL } from \"../constants\";\n\nimport { defaultParser } from \"./parsers\";\n\nexport const api = {\n  fetch(url) {\n    return dispatch({ url });\n  },\n\n  fetchUsers(page) {\n    return dispatch({\n      url: USERS_URL,\n      paginate: true,\n      page,\n      parseResponse: (response) => response.data.results\n    });\n  }\n};\n\nexport async function dispatch(options) {\n  const { method = \"get\", data, parseResponse = defaultParser, ...urlConfig } = options;\n  const url = requestUrl(urlConfig);\n  const headers = {\n    Accept: \"application/json\",\n  };\n  const reqConfig = {\n    headers\n  };\n  const response = await axios[method](url, data, reqConfig);\n  const parsedResponse = parseResponse(response);\n  return parsedResponse;\n}\n\nexport function requestUrl({ paginate, page, query, url }) {\n  const params = [];\n\n  if (paginate) params.push(PAGINATION_PARAMS + page);\n  if (query) params.push(query);\n\n  if (params.length) {\n    // url += url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    url += params.join(\"&\");\n  }\n\n  return url;\n}\n","import { call, put } from \"@redux-saga/core/effects\";\nimport { usersRequestActions } from \"../users/actions\";\nimport { api } from \"./api\";\n\nfunction* fetchEntities(apiFunction, actions, id, param) {\n  try {\n    yield put(actions.pending(id));\n    const data = yield call(apiFunction, param || id);\n    yield put(actions.fulfilled(id, data));\n  } catch (error) {\n    yield put(actions.failed(error));\n  }\n}\n\nexport const fetchUsers = fetchEntities.bind(null, api.fetchUsers, usersRequestActions);\n","import { call, fork, select, takeLatest, takeLeading } from \"redux-saga/effects\";\nimport { fetchUsers } from \"../api\";\nimport { usersActions } from \"./actions\";\n\nfunction* loadUsers({ payload }) {\n  const { userIds } = yield select((state) => state.users);\n  if (!userIds.length) {\n    const { page } = payload;\n    yield call(fetchUsers, page);\n  }\n}\n\nfunction* loadNextPage() {\n  const { page } = yield select((state) => state.users);\n  yield call(fetchUsers, page);\n}\n\nfunction* watchLoadUsers() {\n  yield takeLeading(usersActions.LOAD_USERS, loadUsers);\n}\nfunction* watchLoadNextPage() {\n  yield takeLatest(usersActions.LOAD_NEXT_PAGE, loadNextPage);\n}\n\nexport const userSagas = [fork(watchLoadUsers), fork(watchLoadNextPage)];\n","import { combineReducers } from \"redux\";\nimport { usersReducer } from \"./users\";\n\nconst rootReducer = combineReducers({\n  users: usersReducer\n});\nexport default rootReducer;\n","import { all } from \"redux-saga/effects\";\nimport { userSagas } from \"./users\";\n\nexport default function* sagas() {\n  yield all([...userSagas]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport createSagaMiddlware from \"redux-saga\";\nimport sagas from \"./rootSagas\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst saga = createSagaMiddlware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(saga))\n);\nsaga.run(sagas);\nexport default store;\n","import { useState, useEffect } from \"react\";\n\nexport const getClockTime = (date) => {\n  if (!date) {\n    return null;\n  }\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n\n  let clockTime = \"\";\n  clockTime += (hours < 10 ? \"0\" : \"\") + hours;\n  clockTime += (minutes < 10 ? \":0\" : \":\") + minutes;\n  clockTime += (seconds < 10 ? \":0\" : \":\") + seconds;\n  return clockTime;\n};\n\nexport function useClock() {\n  const [time, setTime] = useState(\"\");\n  useEffect(() => {\n    setTime(getClockTime());\n    const clockInterval = setInterval(() => {\n      const date = new Date();\n      const clockTime = getClockTime(date);\n      setTime(clockTime);\n    }, 250);\n    return () => {\n      clearInterval(clockInterval);\n    };\n  }, []);\n  return time;\n}\n","import React from \"react\";\nimport \"./Avatar.scss\";\n\nexport default function Avatar({ imageUrl }) {\n\treturn (\n\t\t<div className=\"avatar\">\n\t\t\t<img alt=\"user-avatar\" src={imageUrl} />\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Avatar from \"../UI/avatar/Avatar\";\nimport \"./UserDetails.scss\";\n\nconst Row = ({ title, value, children }) => (\n  <div className=\"row\">\n    <span className=\"user-details__title\">{title}</span>\n    <span className=\"user-details__value\">\n      {value}\n      {children}\n    </span>\n  </div>\n);\n\nconst UserDetails = () => {\n  const { id } = useParams();\n  const { users } = useSelector((state) => state.users);\n  const user = users[id];\n\n  if (!user) return <p>Not found</p>;\n  const { picture, name, email, cell, location, dob, gender } = user;\n  return (\n    <div className=\"col user-details__container\">\n      <Avatar imageUrl={picture.thumbnail} />\n      <h2 className=\"user-details__header\">{`${name.first} ${name.last}`}</h2>\n      <div className=\"col\">\n        <Row title=\"Email: \" value={email} />\n        <Row title=\"Cell: \" value={cell} />\n        <Row title=\"Birth: \" value={dob.date} />\n        <Row title=\"Age: \" value={dob.age} />\n        <Row title=\"Gender: \" value={gender} />\n        <Row title=\"Address: \">\n          <p>{`${location.street.number} ${location.street.name}`} </p>\n          <p>{`${location.city} ${location.state} ${location.country}`} </p>\n          <p>{`${location.postcode}`} </p>\n        </Row>\n      </div>\n    </div>\n  );\n};\nexport default UserDetails;\n","import React from \"react\";\nimport \"./Backdrop.scss\";\n\nconst backdrop = ({ onClick }) => {\n\treturn <div id=\"backdrop\" className=\"backdrop\" onClick={onClick} />;\n};\nexport default backdrop;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nconst modal = document.getElementById(\"modal\");\nconst div = document.createElement(\"div\");\n\nconst Portal = ({ children }) => {\n  useEffect(() => {\n    modal.appendChild(div);\n    return () => {\n      modal.removeChild(div);\n    };\n  }, []);\n  return createPortal(children, div);\n};\nexport default Portal;\n","import React from \"react\";\nimport Backdrop from \"../backdrop/Backdrop\";\nimport Portal from \"../portal/Portal\";\nimport \"./Modal.scss\";\n\nconst Modal = ({ children, onClickAway }) => {\n  return (\n    <Portal>\n      <Backdrop onClick={onClickAway} />\n      <div className=\"modal-background\">\n        <div className=\"modal-container\">{children}</div>\n      </div>\n    </Portal>\n  );\n};\nexport default Modal;\n","import React from \"react\";\nimport { useClock } from \"../../hooks\";\n\nconst ClockTime = () => {\n  const time = useClock();\n  return <span>{time}</span>;\n};\n\nexport default ClockTime;\n","import React, { forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport \"./Button.scss\";\n\nconst Button = forwardRef(({ title, id, disabled, active, children, onClick }, ref) => {\n  return (\n    <button\n      ref={ref}\n      id={id}\n      disabled={disabled}\n      className={classNames(\"button-base\", { active })}\n      onClick={onClick}>\n      {title}\n      {children}\n    </button>\n  );\n});\nexport default Button;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst UsersInfo = () => {\n  const { userIds, selectedIds } = useSelector((state) => state.users);\n  return (\n    <div className=\"col\">\n      <span className=\"title\">Loaded users:&nbsp;{`${userIds.length}`}</span>\n      <span className=\"title\">Selected users:&nbsp;{`${selectedIds.length}`}</span>\n    </div>\n  );\n};\n\nexport default UsersInfo;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ClockTime from \"../ClockTime/ClockTime\";\nimport Button from \"../UI/button/Button\";\nimport UsersInfo from \"../User/UsersInfo\";\nimport \"./Header.scss\";\n\nfunction Header() {\n  const history = useHistory();\n\n  const clickBack = () => {\n    history.goBack();\n  };\n\n  const clickTheme = () => {\n    const ltlink = document.getElementById(\"lt-theme\");\n    const dtlink = document.getElementById(\"dt-theme\");\n    function changeTheme(state) {\n      dtlink.disabled = !state; // false\n      ltlink.disabled = state; // true\n    }\n\n    const theme = localStorage.getItem(\"theme\");\n    if (theme === \"dt\") {\n      localStorage.setItem(\"theme\", \"lt\");\n      changeTheme(false);\n    } else {\n      localStorage.setItem(\"theme\", \"dt\");\n      changeTheme(true);\n    }\n  };\n\n  return (\n    <header>\n      <div className=\"col left-panel\">\n        <ClockTime />\n        <UsersInfo />\n      </div>\n      <div className=\"central-panel\">\n        <h1>User App</h1>\n      </div>\n      <div className=\"right-panel\">\n        <div className=\"row\">\n          <Button onClick={clickTheme}>Toggle theme</Button>\n          {history.location.pathname !== \"/\" && <Button title=\"Back\" onClick={clickBack} />}\n        </div>\n      </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Footer.scss\";\n\nconst footer = () => (\n\t<footer className=\"footer\">\n\t\t<span>\n\t\t\t<strong>\n\t\t\t\t<Link to=\"/\">User App</Link>\n\t\t\t</strong>{\" \"}\n\t\t\tby Valentyn Patsera. All Rights Reserved.\n\t\t</span>\n\t</footer>\n);\nexport default footer;\n","import React from \"react\";\nimport Header from \"../../Header/Header\";\nimport Footer from \"../../Footer/Footer\";\nimport \"./Layout.scss\";\n\nexport default function Layout({ children }) {\n  return (\n    <>\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./Input.scss\";\n\nconst Input = (props) => {\n  return <input {...props} />;\n};\n\nexport default Input;\n","import React from \"react\";\nimport Button from \"../button/Button\";\n\nimport \"./Tab.scss\";\n\nconst Tab = ({ title, loading, children, onLoadMore }) => {\n  return (\n    <div className=\"tab\">\n      <h3 className=\"subtitle\">{title}</h3>\n      {children}\n      {onLoadMore && (\n        <div className=\"tab__load-more\">\n          {loading ? (\n            <p>Loading...</p>\n          ) : (\n            <Button ref={null} title={\"Load more\"} onClick={onLoadMore} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../UI/avatar/Avatar\";\nimport Button from \"../UI/button/Button\";\nimport \"./UserListItem.scss\";\n\nconst areEqual = (prevProps, nextProps) => {\n  const notSelected = !prevProps.time && !nextProps.time;\n  const notToggled = prevProps.time === nextProps.time;\n  if (notSelected || notToggled) {\n    return true;\n  }\n  return false;\n};\n\nconst UserListItem = React.memo(\n  ({ user, time, linkToModal, linkToDetails, isSelected, clickSelect }) => {\n    const { picture, name, login } = user;\n\n    return (\n      <li className=\"user-li__container\" id={login.uuid}>\n        <Avatar imageUrl={picture.thumbnail} />\n        <div className=\"user-li__content\">\n          <Link className=\"user-li__title\" to={linkToDetails}>\n            <h4>\n              {name.first}&nbsp;{name.last}\n            </h4>\n          </Link>\n          <span className=\"text-secondary caption\">{time}&nbsp;</span>\n          <div className=\"user-li__btn-container\">\n            <Button\n              id={login.uuid}\n              onClick={clickSelect}\n              title={isSelected ? \"Deselect\" : \"Select\"}\n            />\n            <Link to={linkToModal}>\n              <Button title=\"Modal\" />\n            </Link>\n          </div>\n        </div>\n      </li>\n    );\n  },\n  areEqual\n);\nexport default UserListItem;\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\n\nconst withModalPromisify = (Component) =>\n  forwardRef((props, ref) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const resolveRef = useRef(null);\n    const rejectRef = useRef(null);\n\n    const open = () => {\n      setIsOpen(true);\n      return new Promise((ok, fail) => {\n        resolveRef.current = ok;\n        rejectRef.current = fail;\n      });\n    };\n\n    const close = () => {\n      setIsOpen(false);\n      rejectRef.current(\"Closed by parent\");\n    };\n\n    useImperativeHandle(ref, () => ({\n      open,\n      close,\n    }));\n\n    const resolve = (data) => {\n      setIsOpen(false);\n      resolveRef.current(data);\n    };\n\n    const reject = (message) => {\n      setIsOpen(false);\n      rejectRef.current(message);\n    };\n\n    if (!isOpen) return null;\n    return <Component reject={reject} resolve={resolve} {...props} />;\n  });\n\nexport default withModalPromisify;\n","import React from \"react\";\nimport Button from \"../UI/button/Button\";\nimport Modal from \"../UI/modal/Modal\";\nimport withModalPromisify from \"../UI/modal/withModalPromisify\";\nimport \"./ConfirmationPopup.scss\";\n\nconst ConfirmationPopup = withModalPromisify(({ resolve, reject }) => {\n  return (\n    <Modal onClickAway={() => reject(\"Click away\")} className=\"conf-popup\">\n      <span className=\"conf-popup__title\">Are you sure?</span>\n      <div className=\"conf-popup__btns\">\n        <Button onClick={() => reject(\"Cancel\")}>Cancel</Button>\n        <Button onClick={() => resolve(true)}>Yes</Button>\n      </div>\n    </Modal>\n  );\n});\n\nexport default ConfirmationPopup;\n","import React, { useCallback, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { usersActions } from \"../../core/users\";\nimport UserListItem from \"./UserListItem\";\nimport \"./UserList.scss\";\nimport { getClockTime } from \"../../hooks\";\nimport ConfirmationPopup from \"../ConfirmationPopup/ConfirmationPopup\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function UserList({ selectedTimes, users, filteredIds }) {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const modalRef = useRef(null);\n\n  const clickSelect = useCallback(\n    (isSelected) => async (e) => {\n      const time = new Date().getTime();\n      const id = e.target.id;\n      if (!isSelected) {\n        dispatch(usersActions.toggleSelectUser(id, time));\n        return;\n      }\n      try {\n        const isSure = await modalRef.current.open();\n        if (isSure) {\n          dispatch(usersActions.toggleSelectUser(id, time));\n        }\n      } catch (err) {\n        console.warn(err);\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <ul className=\"col user-list__container\">\n        {filteredIds.map((userId) => {\n          const user = users[userId];\n          let time = null;\n          const selectedTime = selectedTimes[userId];\n          let isSelected = false;\n          if (selectedTime) {\n            const date = new Date(selectedTime);\n            time = getClockTime(date);\n            isSelected = true;\n          }\n          const linkToDetails = `/user/${user.login.uuid}`;\n          const linkToModal = {\n            pathname: linkToDetails,\n            state: { background: location },\n          };\n          return (\n            <UserListItem\n              key={user.login.uuid}\n              isSelected={isSelected}\n              user={user}\n              time={time}\n              linkToModal={linkToModal}\n              linkToDetails={linkToDetails}\n              clickSelect={clickSelect(isSelected)}\n            />\n          );\n        })}\n      </ul>\n      <ConfirmationPopup ref={modalRef} />\n    </>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersActions } from \"../../core/users\";\nimport { useSearch } from \"../../hooks\";\nimport Input from \"../UI/input/Input\";\nimport Tab from \"../UI/tab/Tab\";\nimport UserList from \"./UserList\";\nimport \"./UserTable.scss\";\n\nconst filterWithSearch = (ids, users, search) => {\n  const searchString = search.trim().toLowerCase();\n  if (searchString === \"\") {\n    return ids;\n  } else {\n    return ids.filter((userId) => {\n      const user = users[userId];\n      return (\n        user.name.first.toLowerCase().indexOf(searchString) !== -1 ||\n        user.name.last.toLowerCase().indexOf(searchString) !== -1\n      );\n    });\n  }\n};\n\nconst UserTable = () => {\n  const dispatch = useDispatch();\n  const { search, handleSearchChange } = useSearch();\n  const { users, userIds, selectedIds, selectedTimes } = useSelector(\n    (state) => state.users\n  );\n\n  const filteredUsers = useMemo(() => {\n    return filterWithSearch(userIds, users, search);\n  }, [search, users, userIds]);\n\n  const filteredSelectedUsers = useMemo(() => {\n    return filterWithSearch(selectedIds, users, search);\n  }, [search, users, selectedIds]);\n\n  const clickLoadMore = () => {\n    dispatch(usersActions.loadNextPage());\n  };\n\n  // initial load\n  useEffect(() => {\n    dispatch(usersActions.loadUsers(1));\n  }, [dispatch]);\n\n  return (\n    <div className=\"col user-table__container\">\n      <div>\n        <Input placeholder=\"Search\" onChange={handleSearchChange} />\n      </div>\n      <div className=\"row\">\n        <Tab onLoadMore={clickLoadMore} title=\"All users\">\n          <UserList\n            selectedTimes={selectedTimes}\n            users={users}\n            filteredIds={filteredUsers}\n          />\n        </Tab>\n        <Tab title=\"Selected users\">\n          <UserList\n            selectedTimes={selectedTimes}\n            users={users}\n            filteredIds={filteredSelectedUsers}\n          />\n        </Tab>\n      </div>\n    </div>\n  );\n};\n\nexport default UserTable;\n","import { useState, useRef } from \"react\";\n\nexport const useSearch = () => {\n  const [search, setSearch] = useState(\"\");\n  const searchTimeOutRef = useRef();\n  const handleSearchChange = (e) => {\n    const value = e.target.value;\n    if (searchTimeOutRef.current) {\n      clearTimeout(searchTimeOutRef.current);\n    }\n    const timer = setTimeout(() => {\n      setSearch(value);\n    }, 250);\n    searchTimeOutRef.current = timer;\n  };\n  return { search, handleSearchChange };\n};\n","import React from \"react\";\nimport { Route, Switch, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport UserDetails from \"../components/User/UserDetails\";\nimport Modal from \"../components/UI/modal/Modal\";\nimport Layout from \"../components/UI/layouts/Layout\";\nimport UserTable from \"../components/User/UserTable\";\n\nconst UsersPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const modal = location.state && location.state.background;\n  return (\n    <Layout>\n      <Switch location={modal || location}>\n        <Route exact path={url} component={UserTable} />\n        <Route exact path={url + \"user/:id\"} component={UserDetails} />\n      </Switch>\n      {modal && (\n        <Route exact path={url + \"user/:id\"}>\n          <Modal\n            onClickAway={(e) => {\n              e.stopPropagation();\n              history.goBack();\n            }}>\n            <UserDetails />\n          </Modal>\n        </Route>\n      )}\n    </Layout>\n  );\n};\nexport default UsersPage;\n","import React from \"react\";\nimport { Suspense } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NotAvailable from \"./components/NotAvailable/NotAvailable\";\nimport store from \"./core/store\";\nimport { useMediaQuery } from \"./hooks\";\nimport Users from \"./pages/Users\";\nimport \"./styles/styles.scss\";\nconst NotFound = React.lazy(() => import(\"./components/NotFound/NotFound\"));\n\nconst DesktopRouter = () => (\n  <Switch>\n    <Route path=\"/\" component={Users} />\n    <Route path=\"*\">\n      <NotFound />\n    </Route>\n  </Switch>\n);\n\nfunction App() {\n  const { isMobile } = useMediaQuery();\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/\">\n        <Suspense fallback={<p>Loading...</p>}>\n          {isMobile && <NotAvailable />}\n          <DesktopRouter />\n        </Suspense>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nconst MOBILE_WIDTH = 768;\nexport const useMediaQuery = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      if (width <= MOBILE_WIDTH && !isMobile) {\n        setIsMobile(true);\n      } else if (width >= MOBILE_WIDTH && isMobile) {\n        setIsMobile(false);\n      }\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [isMobile]);\n  return { isMobile };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}